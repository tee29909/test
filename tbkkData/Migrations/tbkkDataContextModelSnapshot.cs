// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tbkkData.Models;

namespace tbkkData.Migrations
{
    [DbContext(typeof(tbkkDataContext))]
    partial class tbkkDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("tbkkData.Model.Asset_Cock", b =>
                {
                    b.Property<int>("Asset_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetName");

                    b.Property<int?>("CompanyIDCompany_CockID");

                    b.Property<int?>("DepartmentIDDepartment_CockID");

                    b.Property<int?>("EmployeeIDEmployee_CockID");

                    b.Property<DateTime>("ExpireDate");

                    b.Property<DateTime>("InstallDate");

                    b.Property<double>("Price");

                    b.Property<string>("SerailNumber");

                    b.Property<string>("Status");

                    b.Property<int?>("SupplierIDSupplier_CockID");

                    b.Property<int>("Warranty");

                    b.HasKey("Asset_CockID");

                    b.HasIndex("CompanyIDCompany_CockID");

                    b.HasIndex("DepartmentIDDepartment_CockID");

                    b.HasIndex("EmployeeIDEmployee_CockID");

                    b.HasIndex("SupplierIDSupplier_CockID");

                    b.ToTable("Asset_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.CarType_Cock", b =>
                {
                    b.Property<int>("CarType_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CerNumber");

                    b.Property<string>("NameCar");

                    b.HasKey("CarType_CockID");

                    b.ToTable("CarType_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.Company_Cock", b =>
                {
                    b.Property<int>("Company_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName");

                    b.Property<string>("Status");

                    b.HasKey("Company_CockID");

                    b.ToTable("Company_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.Department_Cock", b =>
                {
                    b.Property<int>("Department_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName");

                    b.Property<string>("Status");

                    b.HasKey("Department_CockID");

                    b.ToTable("Department_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.DetailOT_Cock", b =>
                {
                    b.Property<int>("DetailOT_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarNumber");

                    b.Property<int?>("CarType_CockID");

                    b.Property<int?>("EmployeeIDEmployee_CockID");

                    b.Property<int?>("FoodSet_CockID");

                    b.Property<int>("Hour");

                    b.Property<int?>("OTIDOT_CockID");

                    b.Property<int?>("PartIDPart_CockID");

                    b.Property<int>("Status");

                    b.Property<string>("Type");

                    b.HasKey("DetailOT_CockID");

                    b.HasIndex("CarType_CockID");

                    b.HasIndex("EmployeeIDEmployee_CockID");

                    b.HasIndex("FoodSet_CockID");

                    b.HasIndex("OTIDOT_CockID");

                    b.HasIndex("PartIDPart_CockID");

                    b.ToTable("DetailOT_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.Employee_Cock", b =>
                {
                    b.Property<int>("Employee_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyIDCompany_CockID");

                    b.Property<int?>("DepartmentNameDepartment_CockID");

                    b.Property<int?>("EmployeeType_CockID");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int?>("PositionIDPosition_CockID");

                    b.HasKey("Employee_CockID");

                    b.HasIndex("CompanyIDCompany_CockID");

                    b.HasIndex("DepartmentNameDepartment_CockID");

                    b.HasIndex("EmployeeType_CockID");

                    b.HasIndex("PositionIDPosition_CockID");

                    b.ToTable("Employee_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.EmployeeType_Cock", b =>
                {
                    b.Property<int>("EmployeeType_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeTypeName");

                    b.HasKey("EmployeeType_CockID");

                    b.ToTable("EmployeeType_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.FoodSet_Cock", b =>
                {
                    b.Property<int>("FoodSet_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Manu");

                    b.Property<string>("NameSet");

                    b.HasKey("FoodSet_CockID");

                    b.ToTable("FoodSet_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.GradeHistory_Cock", b =>
                {
                    b.Property<int>("GradeHistory_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeIDEmployee_CockID");

                    b.Property<int>("GrahAllPoint");

                    b.Property<int>("GrahBonus");

                    b.Property<int>("GrahSalaryUp");

                    b.Property<DateTime>("GrahYear");

                    b.HasKey("GradeHistory_CockID");

                    b.HasIndex("EmployeeIDEmployee_CockID");

                    b.ToTable("GradeHistory_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.JoinAssetEmp_Cock", b =>
                {
                    b.Property<int>("JoinAssetEmp_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetNameAsset_CockID");

                    b.Property<int?>("EmployeeIDEmployee_CockID");

                    b.Property<string>("Note");

                    b.Property<string>("Strint");

                    b.HasKey("JoinAssetEmp_CockID");

                    b.HasIndex("AssetNameAsset_CockID");

                    b.HasIndex("EmployeeIDEmployee_CockID");

                    b.ToTable("JoinAssetEmp_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.OT_Cock", b =>
                {
                    b.Property<int>("OT_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Status");

                    b.Property<string>("TypeOT");

                    b.HasKey("OT_CockID");

                    b.ToTable("OT_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.Part_Cock", b =>
                {
                    b.Property<int>("Part_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("Price");

                    b.HasKey("Part_CockID");

                    b.ToTable("Part_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.Position_Cock", b =>
                {
                    b.Property<int>("Position_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PositionName");

                    b.HasKey("Position_CockID");

                    b.ToTable("Position_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.Repair_Cock", b =>
                {
                    b.Property<int>("Repair_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetIDAsset_CockID");

                    b.Property<DateTime>("Date");

                    b.Property<int?>("EmployeeIDEmployee_CockID");

                    b.Property<int?>("ReportIDReport_CockID");

                    b.Property<string>("Type");

                    b.HasKey("Repair_CockID");

                    b.HasIndex("AssetIDAsset_CockID");

                    b.HasIndex("EmployeeIDEmployee_CockID");

                    b.HasIndex("ReportIDReport_CockID");

                    b.ToTable("Repair_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.Report_Cock", b =>
                {
                    b.Property<int>("Report_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetIDAsset_CockID");

                    b.Property<DateTime>("Date");

                    b.Property<int?>("EmployeeIDEmployee_CockID");

                    b.Property<string>("Status");

                    b.Property<string>("Type");

                    b.HasKey("Report_CockID");

                    b.HasIndex("AssetIDAsset_CockID");

                    b.HasIndex("EmployeeIDEmployee_CockID");

                    b.ToTable("Report_Cock");
                });

            modelBuilder.Entity("tbkkData.Model.Supplier_Cock", b =>
                {
                    b.Property<int>("Supplier_CockID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SupplierName");

                    b.HasKey("Supplier_CockID");

                    b.ToTable("Supplier_Cock");
                });

            modelBuilder.Entity("tbkkData.Models.Asset", b =>
                {
                    b.Property<int>("AssetID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetName");

                    b.Property<int?>("Asset_CompanyIDCompanyID");

                    b.Property<int?>("Asset_DepartmentIDDepartmentID");

                    b.Property<int?>("Asset_LocationIDLocationID");

                    b.Property<int?>("Asset_SupplierIDSupplierID");

                    b.Property<int?>("EmployeeID1");

                    b.Property<DateTime>("ExpireDate");

                    b.Property<string>("Image");

                    b.Property<DateTime>("InstallDate");

                    b.Property<string>("MACAddr");

                    b.Property<int?>("ModelID1");

                    b.Property<string>("Note");

                    b.Property<string>("PONumber");

                    b.Property<double>("Price");

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<string>("SerailNumber");

                    b.Property<string>("Status");

                    b.Property<string>("Type");

                    b.Property<int>("Warranty");

                    b.HasKey("AssetID");

                    b.HasIndex("Asset_CompanyIDCompanyID");

                    b.HasIndex("Asset_DepartmentIDDepartmentID");

                    b.HasIndex("Asset_LocationIDLocationID");

                    b.HasIndex("Asset_SupplierIDSupplierID");

                    b.HasIndex("EmployeeID1");

                    b.HasIndex("ModelID1");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("tbkkData.Models.AssetJoinNetwork", b =>
                {
                    b.Property<int>("AssetJoinNetworkID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetJoinNetwork_AssetIDAssetID");

                    b.Property<int?>("AssetJoinNetwork_NetworkIDNetworkID");

                    b.Property<string>("Note");

                    b.Property<string>("Status");

                    b.HasKey("AssetJoinNetworkID");

                    b.HasIndex("AssetJoinNetwork_AssetIDAssetID");

                    b.HasIndex("AssetJoinNetwork_NetworkIDNetworkID");

                    b.ToTable("AssetJoinNetworks");
                });

            modelBuilder.Entity("tbkkData.Models.Brand", b =>
                {
                    b.Property<int>("BrandID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName");

                    b.Property<string>("Image");

                    b.HasKey("BrandID");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("tbkkData.Models.Canteen", b =>
                {
                    b.Property<int>("CanteenID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Call");

                    b.Property<string>("Email");

                    b.Property<string>("Line");

                    b.Property<string>("Name");

                    b.Property<string>("Status");

                    b.HasKey("CanteenID");

                    b.ToTable("Canteen");
                });

            modelBuilder.Entity("tbkkData.Models.CarType", b =>
                {
                    b.Property<int>("CarTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarType_CompanyCarIDCompanyCarID");

                    b.Property<int>("CerNumber");

                    b.Property<string>("NameCar");

                    b.Property<string>("Seat");

                    b.HasKey("CarTypeID");

                    b.HasIndex("CarType_CompanyCarIDCompanyCarID");

                    b.ToTable("CarType");
                });

            modelBuilder.Entity("tbkkData.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName");

                    b.Property<string>("Image");

                    b.Property<string>("TypeName");

                    b.HasKey("CategoryID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("tbkkData.Models.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName");

                    b.Property<string>("Image");

                    b.Property<string>("Status");

                    b.HasKey("CompanyID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("tbkkData.Models.CompanyCar", b =>
                {
                    b.Property<int>("CompanyCarID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Call");

                    b.Property<string>("Email");

                    b.Property<string>("Line");

                    b.Property<string>("Name");

                    b.Property<string>("Status");

                    b.HasKey("CompanyCarID");

                    b.ToTable("CompanyCar");
                });

            modelBuilder.Entity("tbkkData.Models.Competency", b =>
                {
                    b.Property<int>("CompetencyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompDetaill");

                    b.Property<int>("CompSumPoint");

                    b.Property<int?>("Competency_EmployeeIDEmployeeID");

                    b.Property<int?>("Competency_GradeHistoryIDGradeHistoryID");

                    b.Property<DateTime>("Date");

                    b.HasKey("CompetencyID");

                    b.HasIndex("Competency_EmployeeIDEmployeeID");

                    b.HasIndex("Competency_GradeHistoryIDGradeHistoryID");

                    b.ToTable("Competency");
                });

            modelBuilder.Entity("tbkkData.Models.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName");

                    b.Property<string>("Image");

                    b.Property<string>("Status");

                    b.HasKey("DepartmentID");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("tbkkData.Models.DetailOT", b =>
                {
                    b.Property<int>("DetailOTID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarNumber");

                    b.Property<int?>("DetailOT_CarTypeIDCarTypeID");

                    b.Property<int?>("DetailOT_EmployeeIDEmployeeID");

                    b.Property<int?>("DetailOT_FoodSetIDFoodSetID");

                    b.Property<int?>("DetailOT_OTIDOTID");

                    b.Property<int?>("DetailOT_PartIDPartID");

                    b.Property<int>("Hour");

                    b.Property<int>("Status");

                    b.Property<string>("Type");

                    b.HasKey("DetailOTID");

                    b.HasIndex("DetailOT_CarTypeIDCarTypeID");

                    b.HasIndex("DetailOT_EmployeeIDEmployeeID");

                    b.HasIndex("DetailOT_FoodSetIDFoodSetID");

                    b.HasIndex("DetailOT_OTIDOTID");

                    b.HasIndex("DetailOT_PartIDPartID");

                    b.ToTable("DetailOT");
                });

            modelBuilder.Entity("tbkkData.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addr");

                    b.Property<string>("Birthday");

                    b.Property<string>("Call");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Email");

                    b.Property<string>("EmployeeName");

                    b.Property<int?>("Employee_CompanyIDCompanyID");

                    b.Property<int?>("Employee_DepartmentNameDepartmentID");

                    b.Property<int?>("Employee_EmployeeTypeIDEmployeeTypeID");

                    b.Property<int?>("Employee_LocationIDLocationID");

                    b.Property<int?>("Employee_PositionIDPositionID");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<string>("Image");

                    b.Property<string>("LastName");

                    b.Property<string>("Line");

                    b.Property<string>("Status");

                    b.HasKey("EmployeeID");

                    b.HasIndex("Employee_CompanyIDCompanyID");

                    b.HasIndex("Employee_DepartmentNameDepartmentID");

                    b.HasIndex("Employee_EmployeeTypeIDEmployeeTypeID");

                    b.HasIndex("Employee_LocationIDLocationID");

                    b.HasIndex("Employee_PositionIDPositionID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("tbkkData.Models.EmployeeType", b =>
                {
                    b.Property<int>("EmployeeTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeTypeName");

                    b.HasKey("EmployeeTypeID");

                    b.ToTable("EmployeeType");
                });

            modelBuilder.Entity("tbkkData.Models.FoodSet", b =>
                {
                    b.Property<int>("FoodSetID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FoodSet_CanteenIDCanteenID");

                    b.Property<string>("Manu");

                    b.Property<string>("NameSet");

                    b.HasKey("FoodSetID");

                    b.HasIndex("FoodSet_CanteenIDCanteenID");

                    b.ToTable("FoodSet");
                });

            modelBuilder.Entity("tbkkData.Models.GradeHistory", b =>
                {
                    b.Property<int>("GradeHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count");

                    b.Property<int?>("GradeHistory_EmployeeIDEmployeeID");

                    b.Property<int>("GrahAllPoint");

                    b.Property<int>("GrahBonus");

                    b.Property<int>("GrahSalaryUp");

                    b.Property<DateTime>("GrahYear");

                    b.HasKey("GradeHistoryID");

                    b.HasIndex("GradeHistory_EmployeeIDEmployeeID");

                    b.ToTable("GradeHistory");
                });

            modelBuilder.Entity("tbkkData.Models.JoinAssetEmp", b =>
                {
                    b.Property<int>("JoinAssetEmpID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("JoinAssetEmp_AssetIDAssetID");

                    b.Property<int?>("JoinAssetEmp_EmployeeIDEmployeeID");

                    b.Property<string>("Note");

                    b.Property<string>("Status");

                    b.HasKey("JoinAssetEmpID");

                    b.HasIndex("JoinAssetEmp_AssetIDAssetID");

                    b.HasIndex("JoinAssetEmp_EmployeeIDEmployeeID");

                    b.ToTable("JoinAssetEmp");
                });

            modelBuilder.Entity("tbkkData.Models.JoinLicenseAsset", b =>
                {
                    b.Property<int>("JoinLicenseAssetID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("JoinLicenseAsset_AssetIDAssetID");

                    b.Property<int?>("JoinLicenseAsset_LicenseLicenseID");

                    b.Property<string>("Status");

                    b.HasKey("JoinLicenseAssetID");

                    b.HasIndex("JoinLicenseAsset_AssetIDAssetID");

                    b.HasIndex("JoinLicenseAsset_LicenseLicenseID");

                    b.ToTable("JoinLicenseAsset");
                });

            modelBuilder.Entity("tbkkData.Models.KPI", b =>
                {
                    b.Property<int>("KPIID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KPIDetail");

                    b.Property<int>("KPISumPoint");

                    b.Property<int?>("KPI_EmployeeIDEmployeeID");

                    b.Property<int?>("KPI_GradeHistoryIDGradeHistoryID");

                    b.HasKey("KPIID");

                    b.HasIndex("KPI_EmployeeIDEmployeeID");

                    b.HasIndex("KPI_GradeHistoryIDGradeHistoryID");

                    b.ToTable("KPI");
                });

            modelBuilder.Entity("tbkkData.Models.License", b =>
                {
                    b.Property<int>("LicenseID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attachfiles");

                    b.Property<DateTime>("ExpireDate");

                    b.Property<string>("LicenseName");

                    b.Property<int?>("License_CompanyIDCompanyID");

                    b.Property<int?>("License_DepartmentIDDepartmentID");

                    b.Property<int?>("License_ModelIDModelID");

                    b.Property<int?>("License_SupplierIDSupplierID");

                    b.Property<string>("Note");

                    b.Property<string>("PONumber");

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<string>("SoftewareName");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Status");

                    b.HasKey("LicenseID");

                    b.HasIndex("License_CompanyIDCompanyID");

                    b.HasIndex("License_DepartmentIDDepartmentID");

                    b.HasIndex("License_ModelIDModelID");

                    b.HasIndex("License_SupplierIDSupplierID");

                    b.ToTable("License");
                });

            modelBuilder.Entity("tbkkData.Models.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LocationName");

                    b.Property<string>("Note");

                    b.HasKey("LocationID");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("tbkkData.Models.Login", b =>
                {
                    b.Property<int>("LoginID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Login_EmployeeIDEmployeeID");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("LoginID");

                    b.HasIndex("Login_EmployeeIDEmployeeID");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("tbkkData.Models.Model", b =>
                {
                    b.Property<int>("ModelID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModelName");

                    b.Property<int?>("Model_BrandIDBrandID");

                    b.Property<int?>("Model_CategoryIDCategoryID");

                    b.HasKey("ModelID");

                    b.HasIndex("Model_BrandIDBrandID");

                    b.HasIndex("Model_CategoryIDCategoryID");

                    b.ToTable("Model");
                });

            modelBuilder.Entity("tbkkData.Models.Network", b =>
                {
                    b.Property<int>("NetworkID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IpAddr");

                    b.Property<string>("NetworkName");

                    b.Property<string>("Note");

                    b.Property<string>("Password");

                    b.HasKey("NetworkID");

                    b.ToTable("Network");
                });

            modelBuilder.Entity("tbkkData.Models.OT", b =>
                {
                    b.Property<int>("OTID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Status");

                    b.Property<DateTime>("TimeEnd");

                    b.Property<DateTime>("TimeStart");

                    b.Property<string>("TypeOT");

                    b.HasKey("OTID");

                    b.ToTable("OT");
                });

            modelBuilder.Entity("tbkkData.Models.Part", b =>
                {
                    b.Property<int>("PartID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("Price");

                    b.HasKey("PartID");

                    b.ToTable("Part");
                });

            modelBuilder.Entity("tbkkData.Models.Point", b =>
                {
                    b.Property<int>("PointID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NamePoint");

                    b.Property<int?>("Point_PartIDPartID");

                    b.HasKey("PointID");

                    b.HasIndex("Point_PartIDPartID");

                    b.ToTable("Point");
                });

            modelBuilder.Entity("tbkkData.Models.Position", b =>
                {
                    b.Property<int>("PositionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PositionName");

                    b.HasKey("PositionID");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("tbkkData.Models.Relationship", b =>
                {
                    b.Property<int>("RelationshipID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Relationship_AssetIDmomAssetID");

                    b.Property<int?>("Relationship_AssetIDsonAssetID");

                    b.Property<string>("Status");

                    b.HasKey("RelationshipID");

                    b.HasIndex("Relationship_AssetIDmomAssetID");

                    b.HasIndex("Relationship_AssetIDsonAssetID");

                    b.ToTable("Relationship");
                });

            modelBuilder.Entity("tbkkData.Models.Repair", b =>
                {
                    b.Property<int>("RepairID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Note");

                    b.Property<int?>("Repair_AssetIDAssetID");

                    b.Property<int?>("Repair_EmployeeIDEmployeeID");

                    b.Property<int?>("Repair_ReportIDReportID");

                    b.Property<string>("Status");

                    b.Property<string>("Type");

                    b.HasKey("RepairID");

                    b.HasIndex("Repair_AssetIDAssetID");

                    b.HasIndex("Repair_EmployeeIDEmployeeID");

                    b.HasIndex("Repair_ReportIDReportID");

                    b.ToTable("Repair");
                });

            modelBuilder.Entity("tbkkData.Models.Report", b =>
                {
                    b.Property<int>("ReportID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Note");

                    b.Property<int?>("Report_AssetIDAssetID");

                    b.Property<int?>("Report_EmployeeIDEmployeeID");

                    b.Property<string>("Status");

                    b.Property<string>("Title");

                    b.Property<string>("Type");

                    b.HasKey("ReportID");

                    b.HasIndex("Report_AssetIDAssetID");

                    b.HasIndex("Report_EmployeeIDEmployeeID");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("tbkkData.Models.Suggestion", b =>
                {
                    b.Property<int>("SuggestionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("SugDetail");

                    b.Property<int>("SugSumPoint");

                    b.Property<int?>("Suggestion_EmployeeIDEmployeeID");

                    b.Property<int?>("Suggestion_GradeHistoryIDGradeHistoryID");

                    b.HasKey("SuggestionID");

                    b.HasIndex("Suggestion_EmployeeIDEmployeeID");

                    b.HasIndex("Suggestion_GradeHistoryIDGradeHistoryID");

                    b.ToTable("Suggestion");
                });

            modelBuilder.Entity("tbkkData.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("ContactName");

                    b.Property<string>("Email");

                    b.Property<string>("Image");

                    b.Property<string>("Note");

                    b.Property<string>("SupplierName");

                    b.Property<string>("URL");

                    b.HasKey("SupplierID");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("tbkkData.Models.UpdateAsset", b =>
                {
                    b.Property<int>("UpdateAssetID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetName");

                    b.Property<DateTime>("ExpireDate");

                    b.Property<string>("Image");

                    b.Property<DateTime>("InstallDate");

                    b.Property<string>("MACAddr");

                    b.Property<string>("Note");

                    b.Property<string>("PONumber");

                    b.Property<double>("Price");

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<string>("SerailNumber");

                    b.Property<string>("Status");

                    b.Property<string>("Type");

                    b.Property<int?>("UpdateAsset_AssetIDAssetID");

                    b.Property<int?>("UpdateAsset_CompanyIDCompanyID");

                    b.Property<int?>("UpdateAsset_EmployeeIDEmployeeID");

                    b.Property<int?>("UpdateAsset_LocationIDLocationID");

                    b.Property<int?>("UpdateAsset_ModelIDModelID");

                    b.Property<int?>("UpdateAsset_SepartmentIDDepartmentID");

                    b.Property<int?>("UpdateAsset_SupplierIDSupplierID");

                    b.Property<int>("Warranty");

                    b.HasKey("UpdateAssetID");

                    b.HasIndex("UpdateAsset_AssetIDAssetID");

                    b.HasIndex("UpdateAsset_CompanyIDCompanyID");

                    b.HasIndex("UpdateAsset_EmployeeIDEmployeeID");

                    b.HasIndex("UpdateAsset_LocationIDLocationID");

                    b.HasIndex("UpdateAsset_ModelIDModelID");

                    b.HasIndex("UpdateAsset_SepartmentIDDepartmentID");

                    b.HasIndex("UpdateAsset_SupplierIDSupplierID");

                    b.ToTable("UpdateAsset");
                });

            modelBuilder.Entity("tbkkData.Models.UpdateLicense", b =>
                {
                    b.Property<int>("UpdateLicenseID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attachfiles");

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("ExpireDate");

                    b.Property<string>("LicenseName");

                    b.Property<string>("Note");

                    b.Property<string>("PONumber");

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<string>("SoftwareName");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("Status");

                    b.Property<int?>("UpdateLicense_CompanyIDCompanyID");

                    b.Property<int?>("UpdateLicense_DepartmentIDDepartmentID");

                    b.Property<int?>("UpdateLicense_LicenseIDLicenseID");

                    b.Property<int?>("UpdateLicense_ModelIDModelID");

                    b.Property<int?>("UpdateLicense_SupplierIDSupplierID");

                    b.HasKey("UpdateLicenseID");

                    b.HasIndex("UpdateLicense_CompanyIDCompanyID");

                    b.HasIndex("UpdateLicense_DepartmentIDDepartmentID");

                    b.HasIndex("UpdateLicense_LicenseIDLicenseID");

                    b.HasIndex("UpdateLicense_ModelIDModelID");

                    b.HasIndex("UpdateLicense_SupplierIDSupplierID");

                    b.ToTable("UpdateLicense");
                });

            modelBuilder.Entity("tbkkData.Models.UpdateNetwork", b =>
                {
                    b.Property<int>("UpdateNetworkID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("IpAddr");

                    b.Property<string>("Note");

                    b.Property<string>("Password");

                    b.Property<int?>("UpdateNetwork_EmployeeIDEmployeeID");

                    b.Property<int?>("UpdateNetwork_NetworkIDNetworkID");

                    b.HasKey("UpdateNetworkID");

                    b.HasIndex("UpdateNetwork_EmployeeIDEmployeeID");

                    b.HasIndex("UpdateNetwork_NetworkIDNetworkID");

                    b.ToTable("UpdateNetwork");
                });

            modelBuilder.Entity("tbkkData.Model.Asset_Cock", b =>
                {
                    b.HasOne("tbkkData.Model.Company_Cock", "CompanyID")
                        .WithMany()
                        .HasForeignKey("CompanyIDCompany_CockID");

                    b.HasOne("tbkkData.Model.Department_Cock", "DepartmentID")
                        .WithMany()
                        .HasForeignKey("DepartmentIDDepartment_CockID");

                    b.HasOne("tbkkData.Model.Employee_Cock", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeIDEmployee_CockID");

                    b.HasOne("tbkkData.Model.Supplier_Cock", "SupplierID")
                        .WithMany()
                        .HasForeignKey("SupplierIDSupplier_CockID");
                });

            modelBuilder.Entity("tbkkData.Model.DetailOT_Cock", b =>
                {
                    b.HasOne("tbkkData.Model.CarType_Cock", "CarType")
                        .WithMany()
                        .HasForeignKey("CarType_CockID");

                    b.HasOne("tbkkData.Model.Employee_Cock", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeIDEmployee_CockID");

                    b.HasOne("tbkkData.Model.FoodSet_Cock", "FoodSet")
                        .WithMany()
                        .HasForeignKey("FoodSet_CockID");

                    b.HasOne("tbkkData.Model.OT_Cock", "OTID")
                        .WithMany()
                        .HasForeignKey("OTIDOT_CockID");

                    b.HasOne("tbkkData.Model.Part_Cock", "PartID")
                        .WithMany()
                        .HasForeignKey("PartIDPart_CockID");
                });

            modelBuilder.Entity("tbkkData.Model.Employee_Cock", b =>
                {
                    b.HasOne("tbkkData.Model.Company_Cock", "CompanyID")
                        .WithMany()
                        .HasForeignKey("CompanyIDCompany_CockID");

                    b.HasOne("tbkkData.Model.Department_Cock", "DepartmentName")
                        .WithMany()
                        .HasForeignKey("DepartmentNameDepartment_CockID");

                    b.HasOne("tbkkData.Model.EmployeeType_Cock", "EmployeeType")
                        .WithMany()
                        .HasForeignKey("EmployeeType_CockID");

                    b.HasOne("tbkkData.Model.Position_Cock", "PositionID")
                        .WithMany()
                        .HasForeignKey("PositionIDPosition_CockID");
                });

            modelBuilder.Entity("tbkkData.Model.GradeHistory_Cock", b =>
                {
                    b.HasOne("tbkkData.Model.Employee_Cock", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeIDEmployee_CockID");
                });

            modelBuilder.Entity("tbkkData.Model.JoinAssetEmp_Cock", b =>
                {
                    b.HasOne("tbkkData.Model.Asset_Cock", "AssetName")
                        .WithMany()
                        .HasForeignKey("AssetNameAsset_CockID");

                    b.HasOne("tbkkData.Model.Employee_Cock", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeIDEmployee_CockID");
                });

            modelBuilder.Entity("tbkkData.Model.Repair_Cock", b =>
                {
                    b.HasOne("tbkkData.Model.Asset_Cock", "AssetID")
                        .WithMany()
                        .HasForeignKey("AssetIDAsset_CockID");

                    b.HasOne("tbkkData.Model.Employee_Cock", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeIDEmployee_CockID");

                    b.HasOne("tbkkData.Model.Report_Cock", "ReportID")
                        .WithMany()
                        .HasForeignKey("ReportIDReport_CockID");
                });

            modelBuilder.Entity("tbkkData.Model.Report_Cock", b =>
                {
                    b.HasOne("tbkkData.Model.Asset_Cock", "AssetID")
                        .WithMany()
                        .HasForeignKey("AssetIDAsset_CockID");

                    b.HasOne("tbkkData.Model.Employee_Cock", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeIDEmployee_CockID");
                });

            modelBuilder.Entity("tbkkData.Models.Asset", b =>
                {
                    b.HasOne("tbkkData.Models.Company", "Asset_CompanyID")
                        .WithMany()
                        .HasForeignKey("Asset_CompanyIDCompanyID");

                    b.HasOne("tbkkData.Models.Department", "Asset_DepartmentID")
                        .WithMany()
                        .HasForeignKey("Asset_DepartmentIDDepartmentID");

                    b.HasOne("tbkkData.Models.Location", "Asset_LocationID")
                        .WithMany()
                        .HasForeignKey("Asset_LocationIDLocationID");

                    b.HasOne("tbkkData.Models.Supplier", "Asset_SupplierID")
                        .WithMany()
                        .HasForeignKey("Asset_SupplierIDSupplierID");

                    b.HasOne("tbkkData.Models.Employee", "EmployeeID")
                        .WithMany()
                        .HasForeignKey("EmployeeID1");

                    b.HasOne("tbkkData.Models.Model", "ModelID")
                        .WithMany()
                        .HasForeignKey("ModelID1");
                });

            modelBuilder.Entity("tbkkData.Models.AssetJoinNetwork", b =>
                {
                    b.HasOne("tbkkData.Models.Asset", "AssetJoinNetwork_AssetID")
                        .WithMany()
                        .HasForeignKey("AssetJoinNetwork_AssetIDAssetID");

                    b.HasOne("tbkkData.Models.Network", "AssetJoinNetwork_NetworkID")
                        .WithMany()
                        .HasForeignKey("AssetJoinNetwork_NetworkIDNetworkID");
                });

            modelBuilder.Entity("tbkkData.Models.CarType", b =>
                {
                    b.HasOne("tbkkData.Models.CompanyCar", "CarType_CompanyCarID")
                        .WithMany()
                        .HasForeignKey("CarType_CompanyCarIDCompanyCarID");
                });

            modelBuilder.Entity("tbkkData.Models.Competency", b =>
                {
                    b.HasOne("tbkkData.Models.Employee", "Competency_EmployeeID")
                        .WithMany()
                        .HasForeignKey("Competency_EmployeeIDEmployeeID");

                    b.HasOne("tbkkData.Models.GradeHistory", "Competency_GradeHistoryID")
                        .WithMany()
                        .HasForeignKey("Competency_GradeHistoryIDGradeHistoryID");
                });

            modelBuilder.Entity("tbkkData.Models.DetailOT", b =>
                {
                    b.HasOne("tbkkData.Models.CarType", "DetailOT_CarTypeID")
                        .WithMany()
                        .HasForeignKey("DetailOT_CarTypeIDCarTypeID");

                    b.HasOne("tbkkData.Models.Employee", "DetailOT_EmployeeID")
                        .WithMany()
                        .HasForeignKey("DetailOT_EmployeeIDEmployeeID");

                    b.HasOne("tbkkData.Models.FoodSet", "DetailOT_FoodSetID")
                        .WithMany()
                        .HasForeignKey("DetailOT_FoodSetIDFoodSetID");

                    b.HasOne("tbkkData.Models.OT", "DetailOT_OTID")
                        .WithMany()
                        .HasForeignKey("DetailOT_OTIDOTID");

                    b.HasOne("tbkkData.Models.Part", "DetailOT_PartID")
                        .WithMany()
                        .HasForeignKey("DetailOT_PartIDPartID");
                });

            modelBuilder.Entity("tbkkData.Models.Employee", b =>
                {
                    b.HasOne("tbkkData.Models.Company", "Employee_CompanyID")
                        .WithMany()
                        .HasForeignKey("Employee_CompanyIDCompanyID");

                    b.HasOne("tbkkData.Models.Department", "Employee_DepartmentName")
                        .WithMany()
                        .HasForeignKey("Employee_DepartmentNameDepartmentID");

                    b.HasOne("tbkkData.Models.EmployeeType", "Employee_EmployeeTypeID")
                        .WithMany()
                        .HasForeignKey("Employee_EmployeeTypeIDEmployeeTypeID");

                    b.HasOne("tbkkData.Models.Location", "Employee_LocationID")
                        .WithMany()
                        .HasForeignKey("Employee_LocationIDLocationID");

                    b.HasOne("tbkkData.Models.Position", "Employee_PositionID")
                        .WithMany()
                        .HasForeignKey("Employee_PositionIDPositionID");
                });

            modelBuilder.Entity("tbkkData.Models.FoodSet", b =>
                {
                    b.HasOne("tbkkData.Models.Canteen", "FoodSet_CanteenID")
                        .WithMany()
                        .HasForeignKey("FoodSet_CanteenIDCanteenID");
                });

            modelBuilder.Entity("tbkkData.Models.GradeHistory", b =>
                {
                    b.HasOne("tbkkData.Models.Employee", "GradeHistory_EmployeeID")
                        .WithMany()
                        .HasForeignKey("GradeHistory_EmployeeIDEmployeeID");
                });

            modelBuilder.Entity("tbkkData.Models.JoinAssetEmp", b =>
                {
                    b.HasOne("tbkkData.Models.Asset", "JoinAssetEmp_AssetID")
                        .WithMany()
                        .HasForeignKey("JoinAssetEmp_AssetIDAssetID");

                    b.HasOne("tbkkData.Models.Employee", "JoinAssetEmp_EmployeeID")
                        .WithMany()
                        .HasForeignKey("JoinAssetEmp_EmployeeIDEmployeeID");
                });

            modelBuilder.Entity("tbkkData.Models.JoinLicenseAsset", b =>
                {
                    b.HasOne("tbkkData.Models.Asset", "JoinLicenseAsset_AssetID")
                        .WithMany()
                        .HasForeignKey("JoinLicenseAsset_AssetIDAssetID");

                    b.HasOne("tbkkData.Models.License", "JoinLicenseAsset_License")
                        .WithMany()
                        .HasForeignKey("JoinLicenseAsset_LicenseLicenseID");
                });

            modelBuilder.Entity("tbkkData.Models.KPI", b =>
                {
                    b.HasOne("tbkkData.Models.Employee", "KPI_EmployeeID")
                        .WithMany()
                        .HasForeignKey("KPI_EmployeeIDEmployeeID");

                    b.HasOne("tbkkData.Models.GradeHistory", "KPI_GradeHistoryID")
                        .WithMany()
                        .HasForeignKey("KPI_GradeHistoryIDGradeHistoryID");
                });

            modelBuilder.Entity("tbkkData.Models.License", b =>
                {
                    b.HasOne("tbkkData.Models.Company", "License_CompanyID")
                        .WithMany()
                        .HasForeignKey("License_CompanyIDCompanyID");

                    b.HasOne("tbkkData.Models.Department", "License_DepartmentID")
                        .WithMany()
                        .HasForeignKey("License_DepartmentIDDepartmentID");

                    b.HasOne("tbkkData.Models.Model", "License_ModelID")
                        .WithMany()
                        .HasForeignKey("License_ModelIDModelID");

                    b.HasOne("tbkkData.Models.Supplier", "License_SupplierID")
                        .WithMany()
                        .HasForeignKey("License_SupplierIDSupplierID");
                });

            modelBuilder.Entity("tbkkData.Models.Login", b =>
                {
                    b.HasOne("tbkkData.Models.Employee", "Login_EmployeeID")
                        .WithMany()
                        .HasForeignKey("Login_EmployeeIDEmployeeID");
                });

            modelBuilder.Entity("tbkkData.Models.Model", b =>
                {
                    b.HasOne("tbkkData.Models.Brand", "Model_BrandID")
                        .WithMany()
                        .HasForeignKey("Model_BrandIDBrandID");

                    b.HasOne("tbkkData.Models.Category", "Model_CategoryID")
                        .WithMany()
                        .HasForeignKey("Model_CategoryIDCategoryID");
                });

            modelBuilder.Entity("tbkkData.Models.Point", b =>
                {
                    b.HasOne("tbkkData.Models.Part", "Point_PartID")
                        .WithMany()
                        .HasForeignKey("Point_PartIDPartID");
                });

            modelBuilder.Entity("tbkkData.Models.Relationship", b =>
                {
                    b.HasOne("tbkkData.Models.Asset", "Relationship_AssetIDmom")
                        .WithMany()
                        .HasForeignKey("Relationship_AssetIDmomAssetID");

                    b.HasOne("tbkkData.Models.Asset", "Relationship_AssetIDson")
                        .WithMany()
                        .HasForeignKey("Relationship_AssetIDsonAssetID");
                });

            modelBuilder.Entity("tbkkData.Models.Repair", b =>
                {
                    b.HasOne("tbkkData.Models.Asset", "Repair_AssetID")
                        .WithMany()
                        .HasForeignKey("Repair_AssetIDAssetID");

                    b.HasOne("tbkkData.Models.Employee", "Repair_EmployeeID")
                        .WithMany()
                        .HasForeignKey("Repair_EmployeeIDEmployeeID");

                    b.HasOne("tbkkData.Models.Report", "Repair_ReportID")
                        .WithMany()
                        .HasForeignKey("Repair_ReportIDReportID");
                });

            modelBuilder.Entity("tbkkData.Models.Report", b =>
                {
                    b.HasOne("tbkkData.Models.Asset", "Report_AssetID")
                        .WithMany()
                        .HasForeignKey("Report_AssetIDAssetID");

                    b.HasOne("tbkkData.Models.Employee", "Report_EmployeeID")
                        .WithMany()
                        .HasForeignKey("Report_EmployeeIDEmployeeID");
                });

            modelBuilder.Entity("tbkkData.Models.Suggestion", b =>
                {
                    b.HasOne("tbkkData.Models.Employee", "Suggestion_EmployeeID")
                        .WithMany()
                        .HasForeignKey("Suggestion_EmployeeIDEmployeeID");

                    b.HasOne("tbkkData.Models.GradeHistory", "Suggestion_GradeHistoryID")
                        .WithMany()
                        .HasForeignKey("Suggestion_GradeHistoryIDGradeHistoryID");
                });

            modelBuilder.Entity("tbkkData.Models.UpdateAsset", b =>
                {
                    b.HasOne("tbkkData.Models.Asset", "UpdateAsset_AssetID")
                        .WithMany()
                        .HasForeignKey("UpdateAsset_AssetIDAssetID");

                    b.HasOne("tbkkData.Models.Company", "UpdateAsset_CompanyID")
                        .WithMany()
                        .HasForeignKey("UpdateAsset_CompanyIDCompanyID");

                    b.HasOne("tbkkData.Models.Employee", "UpdateAsset_EmployeeID")
                        .WithMany()
                        .HasForeignKey("UpdateAsset_EmployeeIDEmployeeID");

                    b.HasOne("tbkkData.Models.Location", "UpdateAsset_LocationID")
                        .WithMany()
                        .HasForeignKey("UpdateAsset_LocationIDLocationID");

                    b.HasOne("tbkkData.Models.Model", "UpdateAsset_ModelID")
                        .WithMany()
                        .HasForeignKey("UpdateAsset_ModelIDModelID");

                    b.HasOne("tbkkData.Models.Department", "UpdateAsset_SepartmentID")
                        .WithMany()
                        .HasForeignKey("UpdateAsset_SepartmentIDDepartmentID");

                    b.HasOne("tbkkData.Models.Supplier", "UpdateAsset_SupplierID")
                        .WithMany()
                        .HasForeignKey("UpdateAsset_SupplierIDSupplierID");
                });

            modelBuilder.Entity("tbkkData.Models.UpdateLicense", b =>
                {
                    b.HasOne("tbkkData.Models.Company", "UpdateLicense_CompanyID")
                        .WithMany()
                        .HasForeignKey("UpdateLicense_CompanyIDCompanyID");

                    b.HasOne("tbkkData.Models.Department", "UpdateLicense_DepartmentID")
                        .WithMany()
                        .HasForeignKey("UpdateLicense_DepartmentIDDepartmentID");

                    b.HasOne("tbkkData.Models.License", "UpdateLicense_LicenseID")
                        .WithMany()
                        .HasForeignKey("UpdateLicense_LicenseIDLicenseID");

                    b.HasOne("tbkkData.Models.Model", "UpdateLicense_ModelID")
                        .WithMany()
                        .HasForeignKey("UpdateLicense_ModelIDModelID");

                    b.HasOne("tbkkData.Models.Supplier", "UpdateLicense_SupplierID")
                        .WithMany()
                        .HasForeignKey("UpdateLicense_SupplierIDSupplierID");
                });

            modelBuilder.Entity("tbkkData.Models.UpdateNetwork", b =>
                {
                    b.HasOne("tbkkData.Models.Employee", "UpdateNetwork_EmployeeID")
                        .WithMany()
                        .HasForeignKey("UpdateNetwork_EmployeeIDEmployeeID");

                    b.HasOne("tbkkData.Models.Network", "UpdateNetwork_NetworkID")
                        .WithMany()
                        .HasForeignKey("UpdateNetwork_NetworkIDNetworkID");
                });
#pragma warning restore 612, 618
        }
    }
}
